snippet init_test
    import assert from 'power-assert';

    describe('${1:TARGET}', () => {
      ${2:TARGET}
    });

snippet describe
    describe('${1:TARGET}', () => {
      ${2:TARGET}
    });

snippet context
    context('${1:TARGET}', () => {
      ${2:TARGET}
    });

snippet it
    it('${1:TARGET}', () => {
      ${2:TARGET}
    });

snippet init_container
    import React, { PropTypes, Component } from 'react';
    import { connect } from 'react-redux';

    class ${1:TARGET} extends Component {
      static propTypes = {
      }

      componentDidMount() {
      }

      render() {
        return (
        );
      }
    }

    const mapStateToProps = state => ({
    });

    const mapDispatchToProps = dispatch => ({
    });

    export default connect(mapStateToProps, mapDispatchToProps)($1);

snippet new_component
    const ${1:TARGET} = ({${2:TARGET}}) => (
      ${3:TARGET}
    );

    $1.propTypes = {
    };

snippet new_reducer
    export const ${1:TARGET} = (state = ${2:TARGET}, action) => {
      switch (action.type) {
        default:
          return state;
      }
    };

snippet init_webpack
    const path = require('path');
    const webpack = require('webpack');

    module.exports = {
      context: path.resolve(__dirname, './src'),
      entry: {
        app: './app.js',
      },
      output: {
        path: path.resolve(__dirname, './dist'),
        filename: '[name].bundle.js',
      },
    };


